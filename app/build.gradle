apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.ajinkyad.weatherApp"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode computeVersionCode()
        versionName computeVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"${base_url}\""
            buildConfigField "String", "BASE_URL_PROTOCOL", "\"HTTPS\""
            buildConfigField "String", "APP_VERSION", "\"${app_version}\""
            buildConfigField "String", "API_VERSION", "\"${api_version}\""
            buildConfigField "String", "WEATHER_API_KEY", "\"${weatherAPIKey}\""
            buildConfigField "int", "ROOM_DB_VERSION", "${db_version}"
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"${base_url}\""
            buildConfigField "String", "BASE_URL_PROTOCOL", "\"HTTPS\""
            buildConfigField "String", "APP_VERSION", "\"${app_version}\""
            buildConfigField "String", "API_VERSION", "\"${api_version}\""
            buildConfigField "String", "WEATHER_API_KEY", "\"${weatherAPIKey}\""
            buildConfigField "int", "ROOM_DB_VERSION", "${db_version}"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:28.0.0'
    //retrofit dependencies
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    //Dagger dependencies
    implementation 'com.google.dagger:dagger:2.16'
    implementation "com.google.dagger:dagger-android:2.16"
    implementation "com.google.dagger:dagger-android-support:2.16"
    implementation 'com.android.support:support-v4:28.0.0'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.16'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.15'
    //Viewmodel dependencies
    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation "android.arch.lifecycle:viewmodel:1.1.1"

    //room
    def room_version = "2.1.0"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    //Gson
    implementation 'com.google.code.gson:gson:2.8.5'

    testImplementation 'org.mockito:mockito-core:2.19.0'
}

def computeVersionCode() {
    return Integer.parseInt(version_code)
}

def computeVersionName() {
    return app_version
}

